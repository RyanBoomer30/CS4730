# === Build Stage ===
FROM rust:latest AS builder
WORKDIR /app

# Copy Cargo manifests to cache dependencies.
COPY Cargo.toml Cargo.lock* ./

# Create a dummy main file to cache dependencies.
RUN mkdir src && \
    echo "fn main() {}" > src/peer.rs && \
    cargo build --release --bin peer && \
    rm -rf src

# Copy the full source code and the object files, then rebuild the actual binary.
COPY . .
COPY objects1.txt objects5.txt objects10.txt objects50.txt objects66.txt objects100.txt objects126.txt /app/
RUN cargo clean && cargo build --release --bin peer

# === Runtime Stage ===
FROM ubuntu:22.04
RUN apt-get update && rm -rf /var/lib/apt/lists/*
WORKDIR /app

# Copy the compiled binary from the builder stage.
COPY --from=builder /app/target/release/peer /app/peer

# Copy the object store files from the builder stage.
COPY --from=builder /app/objects1.txt /app/
COPY --from=builder /app/objects5.txt /app/
COPY --from=builder /app/objects10.txt /app/
COPY --from=builder /app/objects50.txt /app/
COPY --from=builder /app/objects66.txt /app/
COPY --from=builder /app/objects100.txt /app/
COPY --from=builder /app/objects126.txt /app/

# Set the entrypoint to the compiled binary.
ENTRYPOINT ["/app/peer"]